#!/bin/bash

# Pasta definida na configuração.

DIRETORIO=/var/lib/libvirt/images

# Nome das imagens

KALI_IMG=
DEBIAN7_IMG=
DEBIAN8_IMG=debian-8.0.0-openstack-amd64.qcow2 #https://cdimage.debian.org/cdimage/openstack/archive/8.0.0/
DEBIAN9_IMG=debian-9-openstack-amd64.qcow2 #https://cdimage.debian.org/cdimage/openstack/archive/9.0.0-20170617/
WINXP_IMG=
WIN7_IMG=
WIN8_IMG=
WIN10_IMG=
WINSERVER08_IMG=
WINSERVER12_IMG=

# Tipos da VMS
TIPO_LINUX=linux
TIPO_WINDOWS=windows

PCM(){ PROMPT ;clear; PMENU;}
PVM(){ PROMPTVM ;clear; PVM;}

PROMPT()
{ printf "${CE}\e[18;$(( ($(tput cols)-46 )/2+1))f<< PRESSIONE QUALQUER TECLA  PARA CONTINUAR >>${FC}";
read -e -n1 PRMPT ;
local PRMPT ;
}

PROMPTVM()
{ printf "${CE}\e[18;$(( ($(tput cols)-46 )/2+1))f<< PRESSIONE QUALQUER TECLA  PARA CONTINUAR >>${FC}";
read -e -n1 PRMPT ;
local PRMPT ;
}

PMENU() 
{
COLS;
}

MENU() {
	tput clear
	printf "${CE}\e[2;${POS2}f----------------------------------------"
	printf "\e[3;${POS1}f-------------- MENU MAQUINAS --------------"
	printf "\e[4;${POS}f---\e[4;${POS3}f---"
	printf "\e[5;${POS}f---${CSM}    [1] Criar           [2] Listar    ${CE}---"
	printf "\e[6;${POS}f---${CSM}    [3] Iniciar         [4] Deletar   ${CE}---"
	printf "\e[7;${POS}f---${CSM}    [5] Pausar          [9] Exit   ${CE}---"
	#printf "\e[8;${POS}f---${CSM}    [7] Help            [8]       ${CE}---"
	printf "\e[8;${POS}f---\e[9;${POS3}f---"

	printf "${CE}\e[9;${POS1}f------------------------------------------"
	printf "\e[10;${POS2}f----------------------------------------\n\n"$FC""
	read -p " OPÇãO: " -n1 OPC

	case "$OPC" in
	1) VM ;;
	2) LISTAR ;;
	3) INICIAR ;;
	4) DELETAR ;;
	5) PAUSAR ;;
	9) echo -e "\n\n Saindo...\n";sleep 0.5; exit ;;
	*) MSGM ; PMENU ;;
	esac
}

COLS() {
	COLS=$(tput cols)
	POS=$(((COLS-44)/2+1))
	POS1=$((POS+1))
	POS2=$((POS+2))
	POS3=$((POS2+39))
	(($COLS>=44)) && MENU || { echo -e "$CVA AJUSTE A TELA!\n No MÍNIMO 44 Colunas $FC" ; PCM ; }
}

MSGM() { echo -e "$CVA\n\n \" OPÇãO INVáLIDA! \" $FC" ; sleep 1 ; }

LISTAR() {
	tput clear
	virsh list --all

PCM
}

INICIAR() {
	tput clear 
	virsh list --all

	read -p "Nome da vm que deseja iniciar:" IN_NAME
	
	if virsh list --all | grep '$IN_NAME' 
	then
		virsh start $IN_NAME
	fi
PCM
}

PAUSAR() {
	tput clear
		virsh list --all

		read -p "Nome da vm que deseja pausar/desligar: " ST_NAME
		virsh shutdown $ST_NAME
		PCM
}

DELETAR() {
	tput clear
	
	read -p "Nome da vm que deseja deletar: " DEL_NAME
	
	virsh destroy $DEL_NAME

	sleep 0.5;
PCM
}

VM() {
	tput clear
	printf "${CE}\e[2;${POS2}f-----------------------------------------"
	printf "\e[3;${POS1}f-------------- MENU IMPORTAÇÃO -----------"
	printf "\e[4;${POS}f---\e[4;${POS3}f---"
	printf "\e[5;${POS}f---${CSM}    [1] Debian          [2] Windowns  ${CE}---"
	printf "\e[6;${POS}f---${CSM}    [3] Kali            [9] Cancelar  ${CE}---"
	#printf "\e[6;${POS}f---${CSM}    [5] Win.Server 2012 [6] Win 2010  ${CE}---"
	#printf "\e[7;${POS}f---${CSM}    [7] Kali            [8] Debian 8  ${CE}---"
	#printf "\e[7;${POS}f---${CSM}              [9] Cancelar            ${CE}---"
	printf "\e[7;${POS}f---\e[7;${POS3}f---"

	printf "${CE}\e[9;${POS1}f------------------------------------------"
	printf "\e[10;${POS2}f----------------------------------------\n\n"$FC""
	read -p " OPÇãO: " -n1 OPCVM

	case "$OPCVM" in
	1) VMDEBIAN ;;
	2) VMWIN ;;
	3) KALI ;;
	9) echo -e "\n\n Cancelando...\n";sleep 0.5; exit ;;
	*) MSGM ; PVM ;;
	esac
}

KALI(){
	tput clear

# Definição do virt-install debian 7.

TIPO=$TIPO_LINUX
FORMATO=qcow2
VARIANTE=wheezy
PORTA=
LISTEN=
IMG_DISK=$DIRETORIO/$KALI_IMG
BRIDGE=virbr0
MACADDRESS=openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'
NETWORK_PARAMS="bridge=${BRIDGE},model=virtio,mac=${MACADDRESS}"

# Inicio da configuração do usuario da maquina virtual.

	read -p "Nome da maquina virtual:" NAME

READ() {
while :;do 
read -p " Informe o TAMANHO d(o|a) $3 ($1 ~ $2): "
	if (($REPLY>=$1 && $REPLY<=$2));then 
	echo -e " $3 OKAY ($1 ~ $2 GB)\n"
	eval $3=$REPLY;	break
	else
	echo -e " Tamanho D(o|a) $3 inválido\n Minimo:$1\n Máximo:$2"; continue ;
	fi
done
}

# TAMANHO do disco virtual.
READ 1 50 DISCO

# TAMANHO da ram.
READ 1 3 MEMORIA

# Quantidade de CPU
READ 1 2 CPU

tput clear

echo -e "\n Os valores definidos são:\n DISCO:$DISCO\n MEMÓRIA:$MEMORIA\n CPU:$CPU\n"

#Criando disco da maquina.

CREATE_IMG=$NAME.$FORMATO
qemu-img create -f $FORMATO $CREATE_IMG ${DISCO}G
DISCO_CRIADO=$CREATE_IMG

# Tranformando o tamanho da memoria de GB para MB

MEMORIA_VIRT=$MEMORIA*1024

# Comando Virt-install para instalar uma nova maquina virtual.

virt-install --import --name $NAME --memory $MEMORIA_VIRT --vcpus $CPU --cpu host --disk $DISCO_CRIADO,format=$FORMATO,bus=virtio --disk $IMG_DISK,device=cdrom --network $NETWORK_PARAMS --os-type=$TIPO --os-variant=$VARIANTE --graphics spice,port=$PORTA,listen=$LISTEN --noautoconsole 

sleep 0.5
PCM
}

VMDEBIAN() {
	tput clear
	printf "${CE}\e[2;${POS2}f----------------------------------------"
	printf "\e[3;${POS1}f---------------- MENU DEBIAN ----------------"
	printf "\e[4;${POS}f---\e[4;${POS3}f---"
	printf "\e[4;${POS}f---${CSM}    [1] Debian 7        [2] Debian 8  ${CE}---"
	printf "\e[5;${POS}f---${CSM}    [3] Debian 9        [9] Cancelar  ${CE}---"
	#printf "\e[6;${POS}f---${CSM}    [5] Win.Server 2012 [6] Win 2010  ${CE}---"
	#printf "\e[7;${POS}f---${CSM}    [7] Kali            [8] Debian 8  ${CE}---"
	printf "\e[6;${POS}f---${CSM}              [9] Cancelar            ${CE}---"
	printf "\e[7;${POS}f---\e[7;${POS3}f---"

	printf "${CE}\e[8;${POS1}f------------------------------------------"
	printf "\e[8;${POS2}f----------------------------------------\n\n"$FC""
	read -p " OPÇãO: " -n1 OPCVM

	case "$OPCVM" in
	1) DEBIAN7;;
	2) DEBIAN8;;
	3) DEBIAN9;;
	9) echo -e "\n\n Cancelando...\n";sleep 0.5; exit ;;
	*) MSGM ; PVM ;;
	esac
}

DEBIAN7(){
	tput clear

# Definição do virt-install debian 7.

TIPO=$TIPO_LINUX
FORMATO=qcow2
VARIANTE=wheezy
PORTA=
LISTEN=
IMG_DISK=$DIRETORIO/$DEBIAN7_IMG
BRIDGE=virbr0
openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//' >> MACADDRESS
NETWORK_PARAMS="bridge=${BRIDGE},model=virtio,mac=${MACADDRESS}"

# Inicio da configuração do usuario da maquina virtual.

	read -p "Nome da maquina virtual:" NAME

READ() {
while :;do 
read -p " Informe o TAMANHO d(o|a) $3 ($1 ~ $2): "
	if (($REPLY>=$1 && $REPLY<=$2));then 
	echo -e " $3 OKAY ($1 ~ $2 GB)\n"
	eval $3=$REPLY;	break
	else
	echo -e " Tamanho D(o|a) $3 inválido\n Minimo:$1\n Máximo:$2"; continue ;
	fi
done
}

# TAMANHO do disco virtual.
READ 1 50 DISCO

# TAMANHO da ram.
READ 1 3 MEMORIA

# Quantidade de CPU
READ 1 2 CPU

tput clear

echo -e "\n Os valores definidos são:\n DISCO:$DISCO\n MEMÓRIA:$MEMORIA\n CPU:$CPU\n"

#Criando disco da maquina.

CREATE_IMG=$NAME.$FORMATO
qemu-img create -f $FORMATO $CREATE_IMG ${DISCO}G
DISCO_CRIADO=$CREATE_IMG

# Tranformando o tamanho da memoria de GB para MB

MEMORIA_VIRT=$MEMORIA*1024

# Comando Virt-install para instalar uma nova maquina virtual.

virt-install --import --name $NAME --memory $MEMORIA_VIRT --vcpus $CPU --cpu host --disk $DISCO_CRIADO,format=$FORMATO,bus=virtio --disk $IMG_DISK,device=cdrom --network $NETWORK_PARAMS --os-type=$TIPO --os-variant=$VARIANTE --graphics spice,port=$PORTA,listen=$LISTEN --noautoconsole 

sleep 0.5
PCM
}

DEBIAN8(){
	tput clear

# Definição do virt-install debian 7.

TIPO=$TIPO_LINUX
FORMATO=qcow2
VARIANTE=
PORTA=
LISTEN=
IMG_DISK=$DIRETORIO/$DEBIAN8_IMG
BRIDGE=virbr0
MACADDRESS=openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'
NETWORK_PARAMS="bridge=${BRIDGE},model=virtio,mac=${MACADDRESS}"

# Inicio da configuração do usuario da maquina virtual.

	read -p "Nome da maquina virtual:" NAME

READ() {
while :;do 
read -p " Informe o TAMANHO d(o|a) $3 ($1 ~ $2): "
	if (($REPLY>=$1 && $REPLY<=$2));then 
	echo -e " $3 OKAY ($1 ~ $2 GB)\n"
	eval $3=$REPLY;	break
	else
	echo -e " Tamanho D(o|a) $3 inválido\n Minimo:$1\n Máximo:$2"; continue ;
	fi
done
}

# TAMANHO do disco virtual.
READ 1 50 DISCO

# TAMANHO da ram.
READ 1 3 MEMORIA

# Quantidade de CPU
READ 1 2 CPU

tput clear

echo -e "\n Os valores definidos são:\n DISCO:$DISCO\n MEMÓRIA:$MEMORIA\n CPU:$CPU\n"

#Criando disco da maquina.

CREATE_IMG=$NAME.$FORMATO
qemu-img create -f $FORMATO $CREATE_IMG ${DISCO}G
DISCO_CRIADO=$CREATE_IMG

# Tranformando o tamanho da memoria de GB para MB

MEMORIA_VIRT=$MEMORIA*1024

# Comando Virt-install para instalar uma nova maquina virtual.

virt-install --import --name $NAME --memory $MEMORIA_VIRT --vcpus $CPU --cpu host --disk $DISCO_CRIADO,format=$FORMATO,bus=virtio --disk $IMG_DISK,device=cdrom --network $NETWORK_PARAMS --os-type=$TIPO --os-variant=$VARIANTE --graphics spice,port=$PORTA,listen=$LISTEN --noautoconsole 

sleep 0.5
PCM
}

DEBIAN9(){
	tput clear

# Definição do virt-install debian 7.

TIPO=$TIPO_LINUX
FORMATO=qcow2
VARIANTE=
PORTA=
LISTEN=
IMG_DISK=$DIRETORIO/$DEBIAN9_IMG
BRIDGE=virbr0
MACADDRESS=openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'
NETWORK_PARAMS="bridge=${BRIDGE},model=virtio,mac=${MACADDRESS}"

# Inicio da configuração do usuario da maquina virtual.

	read -p "Nome da maquina virtual:" NAME

READ() {
while :;do 
read -p " Informe o TAMANHO d(o|a) $3 ($1 ~ $2): "
	if (($REPLY>=$1 && $REPLY<=$2));then 
	echo -e " $3 OKAY ($1 ~ $2 GB)\n"
	eval $3=$REPLY;	break
	else
	echo -e " Tamanho D(o|a) $3 inválido\n Minimo:$1\n Máximo:$2"; continue ;
	fi
done
}

# TAMANHO do disco virtual.
READ 1 50 DISCO

# TAMANHO da ram.
READ 1 3 MEMORIA

# Quantidade de CPU
READ 1 2 CPU

tput clear

echo -e "\n Os valores definidos são:\n DISCO:$DISCO\n MEMÓRIA:$MEMORIA\n CPU:$CPU\n"

#Criando disco da maquina.

CREATE_IMG=$NAME.$FORMATO
qemu-img create -f $FORMATO $CREATE_IMG ${DISCO}G
DISCO_CRIADO=$CREATE_IMG

# Tranformando o tamanho da memoria de GB para MB

MEMORIA_VIRT=$MEMORIA*1024

# Comando Virt-install para instalar uma nova maquina virtual.

virt-install --import --name $NAME --memory $MEMORIA_VIRT --vcpus $CPU --cpu host --disk $DISCO_CRIADO,format=$FORMATO,bus=virtio --disk $IMG_DISK,device=cdrom --network $NETWORK_PARAMS --os-type=$TIPO --os-variant=$VARIANTE --graphics spice,port=$PORTA,listen=$LISTEN --noautoconsole 

sleep 0.5
PCM
}

# Configuração das VM winsdows.

VMWIN() {
	tput clear
	printf "${CE}\e[2;${POS2}f----------------------------------------------"
	printf "\e[3;${POS1}f------------------ MENU WINDOWS -------------------"
	printf "\e[4;${POS}f---\e[4;${POS3}f---"
	printf "\e[5;${POS}f---${CSM}    [1] Win XP          [2] Win 2007        ${CE}---"
	printf "\e[6;${POS}f---${CSM}    [3] Win 2008        [4] Win 2010        ${CE}---"
	printf "\e[7;${POS}f---${CSM}    [5] Win.Server 2008 [6] Win.Server 2012 ${CE}---"
	#printf "\e[7;${POS}f---${CSM}    [7] Kali            [8] Debian 8  ${CE}---"
	printf "\e[8;${POS}f---${CSM}              [9] Cancelar                  ${CE}---"
	printf "\e[9;${POS}f---\e[9;${POS3}f---"

	printf "${CE}\e[10;${POS1}f------------------------------------------"
	printf "\e[11;${POS2}f----------------------------------------\n\n"$FC""
	read -p " OPÇãO: " -n1 OPCVM

	case "$OPCVM" in
	1) WINXP;;
	2) WIN7;;
	3) WIN8;;
	4) WIN10;;
	5) WINSERVER08;;
	6) WINSERVER12;;
	9) echo -e "\n\n Cancelando...\n";sleep 0.5; exit ;;
	*) MSGM ; PVM ;;
	esac
}

MSGC() { echo -e "$CVA\n\n \" OPÇÃO INVÁLIDA! \" $FC" ; sleep 0.25 ; }

WINXP(){
	tput clear

# Definição do virt-install

TIPO=$TIPO_WINDOWS
FORMATO=qcow2
VARIANTE=wheezy
PORTA=
LISTEN=
IMG_DISK=$DIRETORIO/$WINXP_IMG
BRIDGE=virbr0
MACADDRESS=openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'
NETWORK_PARAMS="bridge=${BRIDGE},model=virtio,mac=${MACADDRESS}"

# Inicio da configuração do usuario da maquina virtual.

	read -p "Nome da maquina virtual:" NAME

READ() {
while :;do 
read -p " Informe o TAMANHO d(o|a) $3 ($1 ~ $2): "
	if (($REPLY>=$1 && $REPLY<=$2));then 
	echo -e " $3 OKAY ($1 ~ $2 GB)\n"
	eval $3=$REPLY;	break
	else
	echo -e " Tamanho D(o|a) $3 inválido\n Minimo:$1\n Máximo:$2"; continue ;
	fi
done
}

# TAMANHO do disco virtual.
READ 1 50 DISCO

# TAMANHO da ram.
READ 1 3 MEMORIA

# Quantidade de CPU
READ 1 2 CPU

tput clear

echo -e "\n Os valores definidos são:\n DISCO:$DISCO\n MEMÓRIA:$MEMORIA\n CPU:$CPU\n"

#Criando disco da maquina.

CREATE_IMG=$NAME.$FORMATO
qemu-img create -f $FORMATO $CREATE_IMG ${DISCO}G
DISCO_CRIADO=$CREATE_IMG

# Tranformando o tamanho da memoria de GB para MB

MEMORIA_VIRT=$MEMORIA*1024

# Comando Virt-install para instalar uma nova maquina virtual.

virt-install --import --name $NAME --memory $MEMORIA_VIRT --vcpus $CPU --cpu host --disk $DISCO_CRIADO,format=$FORMATO,bus=virtio --disk $IMG_DISK,device=cdrom --network $NETWORK_PARAMS --os-type=$TIPO --os-variant=$VARIANTE --graphics spice,port=$PORTA,listen=$LISTEN --noautoconsole 

sleep 0.5
PCM
}

WIN7(){
	tput clear

# Definição do virt-install

TIPO=$TIPO_WINDOWS
FORMATO=qcow2
VARIANTE=wheezy
PORTA=
LISTEN=
IMG_DISK=$DIRETORIO/$WIN7_IMG
BRIDGE=virbr0
MACADDRESS=openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'
NETWORK_PARAMS="bridge=${BRIDGE},model=virtio,mac=${MACADDRESS}"

# Inicio da configuração do usuario da maquina virtual.

	read -p "Nome da maquina virtual:" NAME

READ() {
while :;do 
read -p " Informe o TAMANHO d(o|a) $3 ($1 ~ $2): "
	if (($REPLY>=$1 && $REPLY<=$2));then 
	echo -e " $3 OKAY ($1 ~ $2 GB)\n"
	eval $3=$REPLY;	break
	else
	echo -e " Tamanho D(o|a) $3 inválido\n Minimo:$1\n Máximo:$2"; continue ;
	fi
done
}

# TAMANHO do disco virtual.
READ 1 50 DISCO

# TAMANHO da ram.
READ 1 3 MEMORIA

# Quantidade de CPU
READ 1 2 CPU

tput clear

echo -e "\n Os valores definidos são:\n DISCO:$DISCO\n MEMÓRIA:$MEMORIA\n CPU:$CPU\n"

#Criando disco da maquina.

CREATE_IMG=$NAME.$FORMATO
qemu-img create -f $FORMATO $CREATE_IMG ${DISCO}G
DISCO_CRIADO=$CREATE_IMG

# Tranformando o tamanho da memoria de GB para MB

MEMORIA_VIRT=$MEMORIA*1024

# Comando Virt-install para instalar uma nova maquina virtual.

virt-install --import --name $NAME --memory $MEMORIA_VIRT --vcpus $CPU --cpu host --disk $DISCO_CRIADO,format=$FORMATO,bus=virtio --disk $IMG_DISK,device=cdrom --network $NETWORK_PARAMS --os-type=$TIPO --os-variant=$VARIANTE --graphics spice,port=$PORTA,listen=$LISTEN --noautoconsole 

sleep 0.5
PCM
}

WIN8(){
	tput clear

# Definição do virt-install

TIPO=$TIPO_WINDOWS
FORMATO=qcow2
VARIANTE=wheezy
PORTA=
LISTEN=
IMG_DISK=$DIRETORIO/$WIN8_IMG
BRIDGE=virbr0
MACADDRESS=openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'
NETWORK_PARAMS="bridge=${BRIDGE},model=virtio,mac=${MACADDRESS}"

# Inicio da configuração do usuario da maquina virtual.

	read -p "Nome da maquina virtual:" NAME

READ() {
while :;do 
read -p " Informe o TAMANHO d(o|a) $3 ($1 ~ $2): "
	if (($REPLY>=$1 && $REPLY<=$2));then 
	echo -e " $3 OKAY ($1 ~ $2 GB)\n"
	eval $3=$REPLY;	break
	else
	echo -e " Tamanho D(o|a) $3 inválido\n Minimo:$1\n Máximo:$2"; continue ;
	fi
done
}

# TAMANHO do disco virtual.
READ 1 50 DISCO

# TAMANHO da ram.
READ 1 3 MEMORIA

# Quantidade de CPU
READ 1 2 CPU

tput clear

echo -e "\n Os valores definidos são:\n DISCO:$DISCO\n MEMÓRIA:$MEMORIA\n CPU:$CPU\n"

#Criando disco da maquina.

CREATE_IMG=$NAME.$FORMATO
qemu-img create -f $FORMATO $CREATE_IMG ${DISCO}G
DISCO_CRIADO=$CREATE_IMG

# Comando Virt-install para instalar uma nova maquina virtual.

virt-install --import --name $NAME --memory $MEMORIA --vcpus $CPU --cpu host --disk $DISCO_CRIADO,format=$FORMATO,bus=virtio --disk $IMG_DISK,device=cdrom --network $NETWORK_PARAMS --os-type=$TIPO --os-variant=$VARIANTE --graphics spice,port=$PORTA,listen=$LISTEN --noautoconsole 

sleep 0.5
PCM
}

WIN10(){
	tput clear

# Definição do virt-install

TIPO=$TIPO_WINDOWS
FORMATO=qcow2
VARIANTE=wheezy
PORTA=
LISTEN=
IMG_DISK=$DIRETORIO/$WIN10_IMG
BRIDGE=virbr0
MACADDRESS=openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'
NETWORK_PARAMS="bridge=${BRIDGE},model=virtio,mac=${MACADDRESS}"

# Inicio da configuração do usuario da maquina virtual.

	read -p "Nome da maquina virtual:" NAME

READ() {
while :;do 
read -p " Informe o TAMANHO d(o|a) $3 ($1 ~ $2): "
	if (($REPLY>=$1 && $REPLY<=$2));then 
	echo -e " $3 OKAY ($1 ~ $2 GB)\n"
	eval $3=$REPLY;	break
	else
	echo -e " Tamanho D(o|a) $3 inválido\n Minimo:$1\n Máximo:$2"; continue ;
	fi
done
}

# TAMANHO do disco virtual.
READ 1 50 DISCO

# TAMANHO da ram.
READ 1 3 MEMORIA

# Quantidade de CPU
READ 1 2 CPU

tput clear

echo -e "\n Os valores definidos são:\n DISCO:$DISCO\n MEMÓRIA:$MEMORIA\n CPU:$CPU\n"

#Criando disco da maquina.

CREATE_IMG=$NAME.$FORMATO
qemu-img create -f $FORMATO $CREATE_IMG ${DISCO}G
DISCO_CRIADO=$CREATE_IMG

# Comando Virt-install para instalar uma nova maquina virtual.

virt-install --import --name $NAME --memory $MEMORIA --vcpus $CPU --cpu host --disk $DISCO_CRIADO,format=$FORMATO,bus=virtio --disk $IMG_DISK,device=cdrom --network $NETWORK_PARAMS --os-type=$TIPO --os-variant=$VARIANTE --graphics spice,port=$PORTA,listen=$LISTEN --noautoconsole 

sleep 0.5
PCM
}

WINSERVER08(){
	tput clear

# Definição do virt-install

TIPO=$TIPO_WINDOWS
FORMATO=qcow2
VARIANTE=wheezy
PORTA=
LISTEN=
IMG_DISK=$DIRETORIO/$WINSERVER08_IMG
BRIDGE=virbr0
MACADDRESS=openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'
NETWORK_PARAMS="bridge=${BRIDGE},model=virtio,mac=${MACADDRESS}"

# Inicio da configuração do usuario da maquina virtual.

	read -p "Nome da maquina virtual:" NAME

READ() {
while :;do 
read -p " Informe o TAMANHO d(o|a) $3 ($1 ~ $2): "
	if (($REPLY>=$1 && $REPLY<=$2));then 
	echo -e " $3 OKAY ($1 ~ $2 GB)\n"
	eval $3=$REPLY;	break
	else
	echo -e " Tamanho D(o|a) $3 inválido\n Minimo:$1\n Máximo:$2"; continue ;
	fi
done
}

# TAMANHO do disco virtual.
READ 1 50 DISCO

# TAMANHO da ram.
READ 1 3 MEMORIA

# Quantidade de CPU
READ 1 2 CPU

tput clear

echo -e "\n Os valores definidos são:\n DISCO:$DISCO\n MEMÓRIA:$MEMORIA\n CPU:$CPU\n"

#Criando disco da maquina.

CREATE_IMG=$NAME.$FORMATO
qemu-img create -f $FORMATO $CREATE_IMG ${DISCO}G
DISCO_CRIADO=$CREATE_IMG

# Comando Virt-install para instalar uma nova maquina virtual.

virt-install --import --name $NAME --memory $MEMORIA --vcpus $CPU --cpu host --disk $DISCO_CRIADO,format=$FORMATO,bus=virtio --disk $IMG_DISK,device=cdrom --network $NETWORK_PARAMS --os-type=$TIPO --os-variant=$VARIANTE --graphics spice,port=$PORTA,listen=$LISTEN --noautoconsole 

sleep 0.5
PCM
}

WINSERVER12(){
	tput clear

# Definição do virt-install

TIPO=$TIPO_WINDOWS
FORMATO=qcow2
VARIANTE=
PORTA=
LISTEN=
IMG_DISK=$DIRETORIO/$WINSERVER12_IMG
BRIDGE=virbr0
MACADDRESS=openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'
NETWORK_PARAMS="bridge=${BRIDGE},model=virtio,mac=${MACADDRESS}"

# Inicio da configuração do usuario da maquina virtual.

	read -p "Nome da maquina virtual:" NAME

READ() {
while :;do 
read -p " Informe o TAMANHO d(o|a) $3 ($1 ~ $2): "
	if (($REPLY>=$1 && $REPLY<=$2));then 
	echo -e " $3 OKAY ($1 ~ $2 GB)\n"
	eval $3=$REPLY;	break
	else
	echo -e " Tamanho D(o|a) $3 inválido\n Minimo:$1\n Máximo:$2"; continue ;
	fi
done
}

# TAMANHO do disco virtual.
READ 1 50 DISCO

# TAMANHO da ram.
READ 1 3 MEMORIA

# Quantidade de CPU
READ 1 2 CPU

tput clear

echo -e "\n Os valores definidos são:\n DISCO:$DISCO\n MEMÓRIA:$MEMORIA\n CPU:$CPU\n"

#Criando disco da maquina.

CREATE_IMG=$NAME.$FORMATO
qemu-img create -f $FORMATO $CREATE_IMG ${DISCO}G
DISCO_CRIADO=$CREATE_IMG

# Comando Virt-install para instalar uma nova maquina virtual.

virt-install --import --name $NAME --memory $MEMORIA --vcpus $CPU --cpu host --disk $DISCO_CRIADO,format=$FORMATO,bus=virtio --disk $IMG_DISK,device=cdrom --network $NETWORK_PARAMS --os-type=$TIPO --os-variant=$VARIANTE --graphics spice,port=$PORTA,listen=$LISTEN --noautoconsole 

sleep 0.5
PCM
}

PMENU